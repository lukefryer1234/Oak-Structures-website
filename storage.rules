rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Base rule - deny all access by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Allow authenticated users to read and write to their own user folder
    match /users/{userId}/{allUserFiles=**} {
      // Allow read and write if the user is authenticated and matches the userId
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow public read access to product images
    match /products/{productImage=**} {
      // Anyone can read product images
      allow read: if true;
      
      // Only authenticated users with admin role can write to products folder
      // For now, we'll use a simple email check, but this should be improved with custom claims
      allow write: if request.auth != null && 
                     (request.auth.token.email == "luke@mcconversions.uk" || 
                      request.auth.token.email == "admin@timberline.com");
    }
    
    // Allow public read access to gallery images
    match /gallery/{galleryImage=**} {
      allow read: if true;
      allow write: if request.auth != null && 
                     (request.auth.token.email == "luke@mcconversions.uk" || 
                      request.auth.token.email == "admin@timberline.com");
    }
    
    // For uploaded order files and attachments
    match /orders/{orderId}/{allOrderFiles=**} {
      // Users can read their own order files
      allow read: if request.auth != null && 
                    resource.metadata.userId == request.auth.uid;
      
      // Only allow write if the user is authenticated and the metadata includes their userId
      allow write: if request.auth != null && 
                    request.resource.metadata.userId == request.auth.uid;
    }
  }
}

